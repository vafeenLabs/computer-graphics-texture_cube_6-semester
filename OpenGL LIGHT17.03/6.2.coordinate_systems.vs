#version 330 core
// Определение атрибутов вершины (входные данные)
layout (location = 0) in vec3 aPos;       // Позиция вершины (локальные координаты)
layout (location = 1) in vec2 aTexCoords; // Текстурные координаты
layout (location = 2) in vec3 aNormal;    // Нормаль вершины (локальные координаты)

// Выходные переменные (будут переданы во фрагментный шейдер)
out vec2 TexCoords;  // Текстурные координаты
out vec3 Normal;     // Нормаль (мировые координаты)
out vec3 FragPos;    // Позиция фрагмента (мировые координаты)

// Uniform-матрицы преобразований
uniform mat4 model;       // Модельная матрица (локальные -> мировые координаты)
uniform mat4 view;        // Видовая матрица (мировые -> координаты камеры)
uniform mat4 projection;  // Матрица проекции (координаты камеры -> клип координаты)

void main()
{
    // 1. Преобразование позиции вершины в мировые координаты:
    // Умножаем позицию вершины на модельную матрицу
    // (переход из локальных координат объекта в мировые)
    FragPos = vec3(model * vec4(aPos, 1.0));
    
    // 2. Преобразование нормали в мировые координаты:
    // Для нормалей используется обратная транспонированная модельная матрица 3x3
    // Это нужно, чтобы нормали корректно работали при масштабировании объекта
    // (нормали должны оставаться перпендикулярными поверхности)
    Normal = mat3(transpose(inverse(model))) * aNormal;
    
    // 3. Просто передаем текстурные координаты во фрагментный шейдер
    TexCoords = aTexCoords;
    
    // 4. Итоговое преобразование позиции:
    // Сначала мировые координаты -> координаты камеры (view)
    // Затем координаты камеры -> клип координаты (projection)
    gl_Position = projection * view * vec4(FragPos, 1.0);
}